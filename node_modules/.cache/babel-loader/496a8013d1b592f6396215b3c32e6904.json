{"ast":null,"code":"var _jsxFileName = \"/Users/kylemorris/workspace/workshop_demo_storygen/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from './logo.svg';\nimport './App.css';\nimport StoryPage from './components/StoryPage.js';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst banana = require('@banana-dev/banana-dev');\n\nfunction App() {\n  _s();\n\n  const [prompt, setPrompt] = useState(\"\");\n  const [images, setImages] = useState([]);\n  console.log(prompt);\n  useEffect(() => {// update image list on page\n  }, []);\n\n  const summarize = async prompt => {\n    const {\n      Configuration,\n      OpenAIApi\n    } = require(\"openai\");\n\n    const configuration = new Configuration({\n      apiKey: process.env.OPENAI_API_KEY\n    });\n    const openai = new OpenAIApi(configuration);\n    const response = await openai.createCompletion({\n      model: \"text-davinci-002\",\n      prompt: \"Summarize this in one sentence\\n\\n\" + prompt + \"\\n\",\n      temperature: 0.7,\n      max_tokens: 256,\n      top_p: 1,\n      frequency_penalty: 0,\n      presence_penalty: 0\n    });\n  };\n\n  const generateImage = async () => {\n    //call banana\n    const summary = summarize(prompt);\n    console.log(summary);\n    const promptModded = \"A clear, high quality photo showing that \" + summary + \"highly detailed, cinematic lighting, digital art\";\n    const out = await banana.run(\"48e6f984-4f85-4b8a-a2aa-6ade981c129e\", \"cee3a79a-7983-4f39-9974-9fce016fc809\", {\n      \"prompt\": prompt\n    });\n    setImages([...images, {\n      \"text\": promptModded,\n      \"image\": out.modelOutputs[0].image_base64\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"prompt\",\n      onChange: e => {\n        setPrompt(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        generateImage(prompt);\n      },\n      children: \"Generate story page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this), images.map(img => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [img['text'], /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"data:image/png;base64,\" + img['image']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 56\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 40\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"cw6OZ/mqYAGo2GG5h54fHMme8Ss=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","StoryPage","React","useState","useEffect","banana","require","App","prompt","setPrompt","images","setImages","console","log","summarize","Configuration","OpenAIApi","configuration","apiKey","process","env","OPENAI_API_KEY","openai","response","createCompletion","model","temperature","max_tokens","top_p","frequency_penalty","presence_penalty","generateImage","summary","promptModded","out","run","modelOutputs","image_base64","e","target","value","map","img"],"sources":["/Users/kylemorris/workspace/workshop_demo_storygen/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport StoryPage from './components/StoryPage.js';\nimport React, { useState, useEffect } from 'react';\nconst banana = require('@banana-dev/banana-dev');\n\nfunction App() {\n    const [prompt, setPrompt] = useState(\"\");\n    const [images, setImages] = useState([]);\n    console.log(prompt)\n\n    useEffect(() => {\n      // update image list on page\n    },[]);\n\n    const summarize = async (prompt) => {\n      const { Configuration, OpenAIApi } = require(\"openai\");\n\n      const configuration = new Configuration({\n        apiKey: process.env.OPENAI_API_KEY,\n      });\n      const openai = new OpenAIApi(configuration);\n\n      const response = await openai.createCompletion({\n        model: \"text-davinci-002\",\n        prompt: \"Summarize this in one sentence\\n\\n\" + prompt + \"\\n\",\n        temperature: 0.7,\n        max_tokens: 256,\n        top_p: 1,\n        frequency_penalty: 0,\n        presence_penalty: 0,\n      });\n    }\n\n\n    const generateImage = async () => {\n      //call banana\n      const summary = summarize(prompt)\n      console.log(summary)\n      const promptModded = \"A clear, high quality photo showing that \" + summary + \"highly detailed, cinematic lighting, digital art\"\n      const out = await banana.run(\"48e6f984-4f85-4b8a-a2aa-6ade981c129e\", \"cee3a79a-7983-4f39-9974-9fce016fc809\", {\"prompt\": prompt})\n      setImages([...images, {\"text\": promptModded, \"image\": out.modelOutputs[0].image_base64}]);\n    }\n\n    return (\n      <div>\n          <input type=\"text\" name=\"prompt\" onChange={(e) => {setPrompt(e.target.value)}} />\n          <button onClick={() => {generateImage(prompt)}}>\n            Generate story page\n          </button>\n        {images.map((img) => { return (<p>{img['text']}<img src={\"data:image/png;base64,\" + img['image']} /></p>)\n        })}\n      </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,wBAAD,CAAtB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;EACAS,OAAO,CAACC,GAAR,CAAYL,MAAZ;EAEAJ,SAAS,CAAC,MAAM,CACd;EACD,CAFQ,EAEP,EAFO,CAAT;;EAIA,MAAMU,SAAS,GAAG,MAAON,MAAP,IAAkB;IAClC,MAAM;MAAEO,aAAF;MAAiBC;IAAjB,IAA+BV,OAAO,CAAC,QAAD,CAA5C;;IAEA,MAAMW,aAAa,GAAG,IAAIF,aAAJ,CAAkB;MACtCG,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC;IADkB,CAAlB,CAAtB;IAGA,MAAMC,MAAM,GAAG,IAAIN,SAAJ,CAAcC,aAAd,CAAf;IAEA,MAAMM,QAAQ,GAAG,MAAMD,MAAM,CAACE,gBAAP,CAAwB;MAC7CC,KAAK,EAAE,kBADsC;MAE7CjB,MAAM,EAAE,uCAAuCA,MAAvC,GAAgD,IAFX;MAG7CkB,WAAW,EAAE,GAHgC;MAI7CC,UAAU,EAAE,GAJiC;MAK7CC,KAAK,EAAE,CALsC;MAM7CC,iBAAiB,EAAE,CAN0B;MAO7CC,gBAAgB,EAAE;IAP2B,CAAxB,CAAvB;EASD,CAjBD;;EAoBA,MAAMC,aAAa,GAAG,YAAY;IAChC;IACA,MAAMC,OAAO,GAAGlB,SAAS,CAACN,MAAD,CAAzB;IACAI,OAAO,CAACC,GAAR,CAAYmB,OAAZ;IACA,MAAMC,YAAY,GAAG,8CAA8CD,OAA9C,GAAwD,kDAA7E;IACA,MAAME,GAAG,GAAG,MAAM7B,MAAM,CAAC8B,GAAP,CAAW,sCAAX,EAAmD,sCAAnD,EAA2F;MAAC,UAAU3B;IAAX,CAA3F,CAAlB;IACAG,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY;MAAC,QAAQuB,YAAT;MAAuB,SAASC,GAAG,CAACE,YAAJ,CAAiB,CAAjB,EAAoBC;IAApD,CAAZ,CAAD,CAAT;EACD,CAPD;;EASA,oBACE;IAAA,wBACI;MAAO,IAAI,EAAC,MAAZ;MAAmB,IAAI,EAAC,QAAxB;MAAiC,QAAQ,EAAGC,CAAD,IAAO;QAAC7B,SAAS,CAAC6B,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;MAA0B;IAA7E;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAQ,OAAO,EAAE,MAAM;QAACT,aAAa,CAACvB,MAAD,CAAb;MAAsB,CAA9C;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAKGE,MAAM,CAAC+B,GAAP,CAAYC,GAAD,IAAS;MAAE,oBAAQ;QAAA,WAAIA,GAAG,CAAC,MAAD,CAAP,eAAgB;UAAK,GAAG,EAAE,2BAA2BA,GAAG,CAAC,OAAD;QAAxC;UAAA;UAAA;UAAA;QAAA,QAAhB;MAAA;QAAA;QAAA;QAAA;MAAA,QAAR;IACtB,CADA,CALH;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUH;;GAhDQnC,G;;KAAAA,G;AAkDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}